name: Tests for Release

on:
  push:
    branches:
      - release-* # all release-<version> branches
  pull_request:
    # only non-draft PR and when there are "pushes" to the open PR
    types: [review_requested, ready_for_review, synchronize]
    branches:
      - release-* # all release-<version> branches

jobs:
  # STEP 1 - NPM Audit

  # Before we even test a thing we want to have a clean audit! Since this is
  # sufficient to be done using the lowest node version, we can easily use
  # a fixed one:

  audit:
    name: NPM Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm clean-install && npm audit --production

  # STEP 2 - basic unit tests

  # This is the standard unit tests as we do in the basic tests for every PR
  unittest:
    name: Basic unit tests
    runs-on: ubuntu-latest
    needs: [audit]
    strategy:
      matrix:
        node: [16, 18, 20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      # for this workflow we also require npm audit to pass
      - run: npm clean-install
      - run: npm run test:coverage

      # with the following action we enforce PRs to have a high coverage
      # and ensure, changes are tested well enough so that coverage won't fail
      - name: check coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: './coverage/lcov.info'
          min_coverage: 95

  # STEP 3 - Integration tests

  # Since our release may affect several packages that depend on it we need to
  # cover the closest ones, like adapters and examples.

  integrationtests:
    name: Extended integration tests
    runs-on: ubuntu-latest
    needs: [unittest]
    strategy:
      matrix:
        node: [16, 18, 20] # TODO get running for node 16+
    steps:
      # checkout this repo
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false

      # checkout express-adapter repo
      - name: Checkout express-adapter
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false
          repository: node-oauth/express-oauth-server
          path: github/testing/express

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      # in order to test the adapter we need to use the current checkout
      # and install it as local dependency
      # we just cloned and install it as local dependency
      # xxx: added bluebird as explicit dependency
      - run: |
          cd github/testing/express
          npm install
          npm install https://github.com/node-oauth/node-oauth2-server.git#${{ github.ref_name }}
          npm run test

    # todo repeat with other adapters

  publish-npm-dry:
    runs-on: ubuntu-latest
    needs: [integrationtests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false
      - uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - run: npm clean-install
      - run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-github-dry:
    needs: [integrationtests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          show-progress: false
      - uses: actions/setup-node@v4
        with:
          # we always publish targeting the lowest supported node version
          node-version: 16
          registry-url: $registry-url(npm)
      - run: npm clean-install
      - run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
